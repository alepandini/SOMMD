% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/som.R
\name{som}
\alias{som}
\title{Self Organizing Map function}
\usage{
som(
  data,
  grid = somgrid(),
  rlen = 100,
  alpha = c(0.05, 0.01),
  radius = quantile(nhbrdist, 2/3),
  whatmap = NULL,
  user.weights = 1,
  maxNA.fraction = 0L,
  keep.data = TRUE,
  dist.fcts = NULL,
  mode = c("online", "batch", "pbatch"),
  cores = -1,
  init,
  normalizeDataLayers = TRUE
)
}
\arguments{
\item{data}{data matrix, only returned if \code{keep.data == TRUE}.}

\item{grid}{the grid, an object of class \code{somgrid}.}

\item{rlen}{the number of times the complete data set will be presented to the network.}

\item{alpha}{learning rate, a vector of two numbers indicating the amount of change.
Default is to decline linearly from 0.05 to 0.01 over \code{rlen} updates.
Not used for the batch algorithm.}

\item{radius}{the radius of the neighbourhood, either given as a
single number or a vector (start, stop). If it is given as a single number
the radius will change linearly from \code{radius} to zero; as
soon as the neighbourhood gets smaller than one only the winning unit
will be updated. Note that the default before version 3.0 was to run
from \code{radius} to \code{-radius}. If nothing is supplied, the
default is to start with a value that covers 2/3 of all unit-to-unit
distances.}

\item{whatmap}{What data layers to use. If unspecified all layers are used.}

\item{user.weights}{the weights given to individual layers. This can
be a single number (all layers have the same weight, the default), a
vector of the same length as the \code{whatmap} argument, or a vector
of the same length as the \code{data} argument. In xyf maps, this
argument provides the same functionality as the now-deprecated
\code{xweight} argument that was used prior to version 3.0.}

\item{maxNA.fraction}{the maximal fraction of values that may be NA to
prevent the row to be removed.}

\item{keep.data}{if TRUE, return original data and mapping
information. If FALSE, only return the trained map (in essence the codebook vectors).}

\item{dist.fcts}{distance functions corresponding to all layers of the
data, not just the ones indicated by the \code{whatmap} argument.}

\item{mode}{type of learning algorithm.}

\item{cores}{number of cores to use in the "pbatch" learning mode. The
default, -1, corresponds to using all available cores.}

\item{init}{list of matrices, initial values for the
codebook vectors. The list should have the same length as the data
list, and corresponding numbers of variables (columns). Each list
element should have a number of rows corresponding to the number of
units in the map.}

\item{normalizeDataLayers}{boolean, indicating whether
\code{distance.weights} should be calculated (see details section).
If \code{normalizeDataLayers == FALSE} the user weights
are applied to the data immediately.}

\item{unit.classif}{winning units for all data objects,
only returned if \code{keep.data == TRUE}.}

\item{distances}{distances of objects to their corresponding winning
unit, only returned if \code{keep.data == TRUE}.}

\item{codes}{a list of matrices containing codebook vectors.}

\item{changes}{matrix of mean average deviations from code vectors;
every map corresponds with one column.}

\item{{alpha, }{radius, user.weights, whatmap, maxNA.fraction} input arguments
presented to the function.}

\item{distance.weights}{if \code{normalizeDataLayers} weights to
equalize the influence of the individual data layers, else a vector
of ones.}
}
\value{
An object of class "kohonen" with components
}
\description{
The function is a wrapper over \link[kohonen]{supersom} to cover all the
necessary function within the package, besides more specialized example for
clustering MD trajectories.

#' the definition of argument duplicated from \link[kohonen]{supersom}:

@author Hamid Davoukhani \email{h.davoudkhani@gmail.com}
}
\examples{

#TODO an example for trajectories should be explained here


}
\references{
R. Wehrens and L.M.C. Buydens, J. Stat. Softw. 21 (5), 2007;
R. Wehrens and J. Kruisselbrink, submitted, 2017.
}
\seealso{
\code{\link[kohonen]{supersom}}
}
